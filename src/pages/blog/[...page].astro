---
import Layout from '@/layouts/Layout.astro'
import { getCollection } from 'astro:content'
import DatePresenter from '@/components/DatePresenter.astro'
import { type CollectionEntry } from 'astro:content'
import type { GetStaticPathsOptions, Page } from 'astro'

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const posts = (await getCollection('posts')).sort(sortPostsByDateDesc)

  function sortPostsByDateDesc(
    postA: CollectionEntry<'posts'>,
    postB: CollectionEntry<'posts'>,
  ) {
    return (
      new Date(postB.data.date).getTime() - new Date(postA.data.date).getTime()
    )
  }

  return paginate(posts, { pageSize: 3 })
}

const { page } = Astro.props as { page: Page<CollectionEntry<'posts'>> }
const posts = page.data
---

<Layout title="Astro Portfolio Starter">
  <section
    class="mx-auto max-w-3xl w-full dark:text-gray-100 mt-40 px-4 xl:px-0 mb-20"
  >
    <div class="posts divide-y divide:gray-400 dark:divide-gray-700">
      {
        posts.map(post => (
          <div class="post py-8">
            <h2 class="text-3xl font-bold">
              <a
                href={`/posts/${post.slug}`}
                class="hover:text-gray-500 dark:hover:text-gray-300"
              >
                {post.data.title}
              </a>
            </h2>
            <div class="text-base flex gap-2 mt-1">
              <DatePresenter date={post.data.date} />
            </div>
            <div class="line-clamp-3 text-gray-600 dark:text-gray-300 mt-4">
              {post.data.summary}
            </div>
            <div class="mt-4">
              <a
                href={`/posts/${post.slug}`}
                class="font-bold uppercase hover:text-gray-500 dark:hover:text-gray-300"
              >
                Read More
              </a>
            </div>
          </div>
        ))
      }
    </div>
    {
      page.lastPage !== 1 && (
        <div class="pagination flex justify-between text-base items-center border-t border-gray-200 dark:border-gray-700 pt-8">
          {page.url.prev ? (
            <a
              href={page.url.prev}
              class="hover:text-gray-500 dark:hover:text-gray-300"
            >
              &larr; Prev
            </a>
          ) : (
            <a href="#" class="invisible">
              &larr; Prev
            </a>
          )}
          <div>
            Page {page.currentPage} of {page.lastPage}
          </div>
          {page.url.next ? (
            <a
              href={page.url.next}
              class="hover:text-gray-500 dark:hover:text-gray-300"
            >
              Next &rarr;
            </a>
          ) : (
            <a href="#" class="invisible">
              Next &rarr;
            </a>
          )}
        </div>
      )
    }
  </section>
</Layout>
